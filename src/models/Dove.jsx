/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: FourthGreen (https://sketchfab.com/FourthGreen)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/dove-bird-rigged-6b91be2a28fb4404a2d57d5ca98bd4dc
Title: Dove Bird Rigged
*/

import {useRef, useEffect} from 'react'
import doveScene from '../assets/3d/dove_bird_rigged.glb';
import { useAnimations, useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

const Dove = (props) => {
    const { scene, animations } = useGLTF(doveScene);
    const doveRef = useRef();
    const { actions } = useAnimations(animations, doveRef);

    useEffect(() => {
      actions["Take 001"].play();
    }, []);

    useFrame(({clock, camera}) => {
        doveRef.current.position.y = Math.sin(clock.elapsedTime) * 0.2 + 2

      if(doveRef.current.position.x > camera.position.x + 10){
        doveRef.current.rotation.y = Math.PI;
      } else if(doveRef.current.position.x < camera.position.x - 10) {
        doveRef.current.rotation.y = 0;
      }
      if(doveRef.current.rotation.y === 0){
        doveRef.current.position.x += 0.01;
        doveRef.current.position.z -= 0.01;
      }else {
        doveRef.current.position.x -= 0.01;
        doveRef.current.position.z += 0.01;
      }
    })
  return (
    <mesh position={[-7, 2, 1]} scale={[0.06, 0.06, 0.06]} ref={doveRef}>
        <primitive object={scene}/>
    </mesh>
  )
}

export default Dove

// const group = useRef();
//   const { nodes, materials, animations } = useGLTF("/dove_bird_rigged.glb");
//   const { actions } = useAnimations(animations, group);
//   return (
//     <group ref={group} {...props} dispose={null}>
//       <group name="Sketchfab_Scene">
//         <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
//           <group name="DoveFBX" rotation={[Math.PI / 2, 0, 0]}>
//             <group name="Object_2">
//               <group name="RootNode">
//                 <group name="Object_4">
//                   <primitive object={nodes._rootJoint} />
//                   <skinnedMesh
//                     name="Object_7"
//                     geometry={nodes.Object_7.geometry}
//                     material={materials.Main}
//                     skeleton={nodes.Object_7.skeleton}
//                   />
//                   <group name="Object_6" rotation={[-Math.PI / 2, 0, 0]} />
//                   <group name="Dove" rotation={[-Math.PI / 2, 0, 0]} />
//                 </group>
//               </group>
//             </group>
//           </group>
//         </group>
//       </group>
//     </group>
//   );
